# A GitHub Actions workflow file for running API tests using Pytest.
#  - Triggers on pushes and pull requests to the main or master branches.
# The workflow sets up a Python environment, installs dependencies, and runs the tests.
# Ensure you have a requirements.txt file in your repository with the necessary dependencies.
name: API Test CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'  # Adjust if you're using a different version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Allure CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y default-jre
        sudo wget https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.tgz
        sudo tar -zxvf allure-2.27.0.tgz -C /opt/
        sudo ln -s /opt/allure-2.27.0/bin/allure /usr/bin/allure

# Running Pytest with Allure makes reporting results professional and readable.
# It shows what failed, why, and where.
    - name: Run Pytest with Allure
      run: |
        pytest --alluredir=allure-results
        
    - name: Generate Allure HTML Report
      run: |
        pip install allure-pytest  # Ensure Allure is installed
        allure generate allure-results --clean -o allure-report

    - name: Upload Allure Results as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: allure-results
        path: allure-results/

    - name: Upload Allure HTML Report
      uses: actions/upload-artifact@v4
      with:
        name: allure-report
        path: allure-report/
